name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.10'
  PULUMI_VERSION: '3.x'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: Run linters
        run: |
          flake8 src/
          black --check src/
          isort --check-only src/

  deploy-staging:
    needs: [test, lint]
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Pulumi
        uses: pulumi/setup-pulumi@v2
        with:
          pulumi-version: ${{ env.PULUMI_VERSION }}

      - name: Configure Pulumi
        run: |
          cd infrastructure/pulumi
          pulumi stack select staging
          pulumi config set duckdb-spawn:environment staging

      - name: Deploy to staging
        run: |
          cd infrastructure/pulumi
          pulumi up --yes
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  deploy-production:
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Pulumi
        uses: pulumi/setup-pulumi@v2
        with:
          pulumi-version: ${{ env.PULUMI_VERSION }}

      - name: Configure Pulumi
        run: |
          cd infrastructure/pulumi
          pulumi stack select production
          pulumi config set duckdb-spawn:environment production

      - name: Deploy to production
        run: |
          cd infrastructure/pulumi
          pulumi up --yes
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }} 