name: Debug Docker Registry Access

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Specific Docker image tag to check'
        required: false
        default: 'latest'

jobs:
  debug-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Check Docker Hub connection
        run: |
          echo "Checking Docker Hub connection..."
          docker info
          echo "✓ Docker Hub connection verified"

      - name: List available repositories
        run: |
          echo "Listing repositories for ${{ secrets.DOCKER_HUB_USERNAME }}..."
          curl -s "https://hub.docker.com/v2/users/${{ secrets.DOCKER_HUB_USERNAME }}/repositories?page_size=100" | jq '.results[].name'

      - name: List available tags
        run: |
          echo "Listing tags for duckdb-spawn..."
          curl -s "https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKER_HUB_USERNAME }}/duckdb-spawn/tags?page_size=100" | jq -r '.results[].name'

      - name: Check specific tag
        run: |
          TAG="${{ github.event.inputs.image_tag }}"
          echo "Checking for tag: $TAG"
          
          # Try to pull the image
          if docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/duckdb-spawn:${TAG}; then
            echo "✓ Successfully pulled image ${{ secrets.DOCKER_HUB_USERNAME }}/duckdb-spawn:${TAG}"
          else
            echo "✗ Failed to pull image ${{ secrets.DOCKER_HUB_USERNAME }}/duckdb-spawn:${TAG}"
            echo "Available tags are:"
            curl -s "https://registry.hub.docker.com/v2/repositories/${{ secrets.DOCKER_HUB_USERNAME }}/duckdb-spawn/tags?page_size=100" | jq -r '.results[].name'
          fi

      - name: Create and test Docker secret for Koyeb
        run: |
          echo "Creating Docker credentials file..."
          mkdir -p ~/.docker
          echo '{"auths":{"https://index.docker.io/v1/":{"auth":"'$(echo -n "${{ secrets.DOCKER_HUB_USERNAME }}:${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | base64)'"}}}' > ~/.docker/config.json
          
          # Install Koyeb CLI
          curl -fsSL https://raw.githubusercontent.com/koyeb/koyeb-cli/master/install.sh | sh
          export PATH=$PATH:$HOME/.koyeb/bin
          
          # Configure Koyeb CLI
          echo "token: ${{ secrets.KOYEB_API_TOKEN }}" > ~/.koyeb.yaml
          
          # Create or update the secret
          echo "Creating Docker registry secret in Koyeb..."
          koyeb secret create DOCKER_REPO_SECRET --docker-registry-auth=${{ secrets.DOCKER_HUB_USERNAME }}:${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} --type=registry || echo "Secret already exists, trying to update..."
          
          # Try to get the secret
          echo "Verifying secret in Koyeb..."
          koyeb secret get DOCKER_REPO_SECRET 